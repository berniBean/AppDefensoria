// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ednita_dbContext))]
    [Migration("20221025165425_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("Data.Models.Archivo", b =>
                {
                    b.Property<string>("Idarchivo")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idarchivo");

                    b.Property<string>("Amparo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Carpeta")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("carpeta");

                    b.Property<string>("Delito")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("delito");

                    b.Property<int>("Estatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ExpedinteAmparo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Fiscalia")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdPeticionario")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idPeticionario");

                    b.Property<string>("Juez")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ParticularesIdParticulares")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("particulares_idParticulares");

                    b.Property<string>("ProcesoPenal")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("procesoPenal");

                    b.Property<string>("SegundaInstancia")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Serieindevep")
                        .HasColumnType("int")
                        .HasColumnName("serieindevep");

                    b.Property<string>("Toca")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Victima")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Idarchivo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ParticularesIdParticulares" }, "fk_archivo_particulares1_idx");

                    b.HasIndex(new[] { "IdPeticionario" }, "fk_archivo_peticionario1_idx");

                    b.ToTable("archivo");
                });

            modelBuilder.Entity("Data.Models.Cargo", b =>
                {
                    b.Property<string>("Idcargo")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idcargo");

                    b.Property<string>("Puesto")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("puesto");

                    b.HasKey("Idcargo")
                        .HasName("PRIMARY");

                    b.ToTable("cargo");

                    b.HasData(
                        new
                        {
                            Idcargo = "3e53adf4-53b8-11ed-b965-a4bb6dda82fc",
                            Puesto = "Defensor publico"
                        });
                });

            modelBuilder.Entity("Data.Models.Cita", b =>
                {
                    b.Property<string>("Idcitas")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idcitas");

                    b.Property<string>("ArchivoIdarchivo")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("archivo_idarchivo");

                    b.Property<string>("Audiencia")
                        .HasMaxLength(155)
                        .HasColumnType("varchar(155)")
                        .HasColumnName("audiencia");

                    b.Property<DateTime?>("FechaAudiencia")
                        .HasColumnType("datetime");

                    b.Property<string>("ReportesIdreportes")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("reportes_idreportes");

                    b.Property<string>("ResultadoAudiencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Sala")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sala");

                    b.HasKey("Idcitas")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ArchivoIdarchivo" }, "fk_citas_archivo1_idx1");

                    b.HasIndex(new[] { "ReportesIdreportes" }, "fk_citas_reportes1_idx");

                    b.ToTable("citas");
                });

            modelBuilder.Entity("Data.Models.Famiiliar", b =>
                {
                    b.Property<string>("PersonaIdPersona")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("persona_idPersona");

                    b.Property<string>("PeticionarioIdPeticionario")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("peticionario_idPeticionario");

                    b.HasKey("PersonaIdPersona", "PeticionarioIdPeticionario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonaIdPersona" }, "fk_famiiliar_persona1_idx");

                    b.HasIndex(new[] { "PeticionarioIdPeticionario" }, "fk_famiiliar_peticionario1_idx");

                    b.ToTable("famiiliar");
                });

            modelBuilder.Entity("Data.Models.Funcionario", b =>
                {
                    b.Property<string>("IdFuncionario")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idFuncionario");

                    b.Property<string>("CargoIdcargo")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("cargo_idcargo");

                    b.Property<string>("OficinaIdoficina")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("oficina_idoficina");

                    b.Property<string>("PersonaIdPersona")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("persona_idPersona");

                    b.HasKey("IdFuncionario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CargoIdcargo" }, "fk_Funcionario_cargo1_idx");

                    b.HasIndex(new[] { "OficinaIdoficina" }, "fk_Funcionario_oficina1_idx");

                    b.HasIndex(new[] { "PersonaIdPersona" }, "fk_Funcionario_persona1_idx");

                    b.ToTable("funcionario");

                    b.HasData(
                        new
                        {
                            IdFuncionario = "5df131f7-4bc1-11ed-975f-f4ee08b6e8c4",
                            CargoIdcargo = "3e53adf4-53b8-11ed-b965-a4bb6dda82fc",
                            OficinaIdoficina = "9d58cb76-53b7-11ed-b965-a4bb6dda82fc",
                            PersonaIdPersona = "100014414521958400"
                        });
                });

            modelBuilder.Entity("Data.Models.Oficina", b =>
                {
                    b.Property<string>("Idoficina")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idoficina");

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("abreviatura");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Idoficina")
                        .HasName("PRIMARY");

                    b.ToTable("oficina");

                    b.HasData(
                        new
                        {
                            Idoficina = "9d58cb76-53b7-11ed-b965-a4bb6dda82fc",
                            Abreviatura = "COA",
                            Nombre = "COATEPEC"
                        });
                });

            modelBuilder.Entity("Data.Models.Particulare", b =>
                {
                    b.Property<string>("IdParticulares")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idParticulares");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Estudios")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("IdPeticionario")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idPeticionario");

                    b.Property<string>("Ocupacion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ocupacion");

                    b.HasKey("IdParticulares")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPeticionario" }, "fk_particulares_peticionario1_idx");

                    b.ToTable("particulares");
                });

            modelBuilder.Entity("Data.Models.Persona", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idPersona");

                    b.Property<string>("Amaterno")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("amaterno");

                    b.Property<string>("Apaterno")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apaterno");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPersona")
                        .HasName("PRIMARY");

                    b.ToTable("persona");

                    b.HasData(
                        new
                        {
                            IdPersona = "100014414521958400",
                            Amaterno = "RAMIREZ",
                            Apaterno = "CUEVAS",
                            Nombre = "EDNA DONAJI"
                        });
                });

            modelBuilder.Entity("Data.Models.Peticionario", b =>
                {
                    b.Property<string>("IdPeticionario")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idPeticionario");

                    b.Property<string>("Alias")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("alias");

                    b.Property<string>("Domicilio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FuncionarioIdFuncionario")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("funcionario_idFuncionario");

                    b.Property<string>("GrupoEtnico")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("IdentidadResguardada")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("identidadResguardada");

                    b.Property<string>("Lengua")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("PersonaIdPersona")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("persona_idPersona");

                    b.Property<string>("Telefono")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("telefono");

                    b.HasKey("IdPeticionario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FuncionarioIdFuncionario" }, "fk_peticionario_funcionario1_idx");

                    b.HasIndex(new[] { "PersonaIdPersona" }, "fk_peticionario_persona1_idx");

                    b.ToTable("peticionario");
                });

            modelBuilder.Entity("Data.Models.Reporte", b =>
                {
                    b.Property<string>("Idreportes")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("idreportes");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.HasKey("Idreportes")
                        .HasName("PRIMARY");

                    b.ToTable("reportes");
                });

            modelBuilder.Entity("Data.Models.Archivo", b =>
                {
                    b.HasOne("Data.Models.Peticionario", "IdPeticionarioNavigation")
                        .WithMany("Archivos")
                        .HasForeignKey("IdPeticionario")
                        .HasConstraintName("fk_archivo_peticionario1")
                        .IsRequired();

                    b.HasOne("Data.Models.Particulare", "ParticularesIdParticularesNavigation")
                        .WithMany("Archivos")
                        .HasForeignKey("ParticularesIdParticulares")
                        .HasConstraintName("fk_archivo_particulares1")
                        .IsRequired();

                    b.Navigation("IdPeticionarioNavigation");

                    b.Navigation("ParticularesIdParticularesNavigation");
                });

            modelBuilder.Entity("Data.Models.Cita", b =>
                {
                    b.HasOne("Data.Models.Archivo", "ArchivoIdarchivoNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("ArchivoIdarchivo")
                        .HasConstraintName("fk_citas_archivo1")
                        .IsRequired();

                    b.HasOne("Data.Models.Reporte", "ReportesIdreportesNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("ReportesIdreportes")
                        .HasConstraintName("fk_citas_reportes1")
                        .IsRequired();

                    b.Navigation("ArchivoIdarchivoNavigation");

                    b.Navigation("ReportesIdreportesNavigation");
                });

            modelBuilder.Entity("Data.Models.Famiiliar", b =>
                {
                    b.HasOne("Data.Models.Persona", "PersonaIdPersonaNavigation")
                        .WithMany("Famiiliars")
                        .HasForeignKey("PersonaIdPersona")
                        .HasConstraintName("fk_famiiliar_persona")
                        .IsRequired();

                    b.HasOne("Data.Models.Peticionario", "PeticionarioIdPeticionarioNavigation")
                        .WithMany("Famiiliars")
                        .HasForeignKey("PeticionarioIdPeticionario")
                        .HasConstraintName("fk_famiiliar_peticionario")
                        .IsRequired();

                    b.Navigation("PersonaIdPersonaNavigation");

                    b.Navigation("PeticionarioIdPeticionarioNavigation");
                });

            modelBuilder.Entity("Data.Models.Funcionario", b =>
                {
                    b.HasOne("Data.Models.Cargo", "CargoIdcargoNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoIdcargo")
                        .HasConstraintName("fk_Funcionario_cargo1")
                        .IsRequired();

                    b.HasOne("Data.Models.Oficina", "OficinaIdoficinaNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("OficinaIdoficina")
                        .HasConstraintName("fk_Funcionario_oficina1")
                        .IsRequired();

                    b.HasOne("Data.Models.Persona", "PersonaIdPersonaNavigation")
                        .WithMany("Funcionarios")
                        .HasForeignKey("PersonaIdPersona")
                        .HasConstraintName("fk_Funcionario_persona1")
                        .IsRequired();

                    b.Navigation("CargoIdcargoNavigation");

                    b.Navigation("OficinaIdoficinaNavigation");

                    b.Navigation("PersonaIdPersonaNavigation");
                });

            modelBuilder.Entity("Data.Models.Peticionario", b =>
                {
                    b.HasOne("Data.Models.Funcionario", "FuncionarioIdFuncionarioNavigation")
                        .WithMany("Peticionarios")
                        .HasForeignKey("FuncionarioIdFuncionario")
                        .HasConstraintName("fk_peticionario_funcionario1")
                        .IsRequired();

                    b.HasOne("Data.Models.Persona", "PersonaIdPersonaNavigation")
                        .WithMany("Peticionarios")
                        .HasForeignKey("PersonaIdPersona")
                        .HasConstraintName("fk_peticionario_persona1")
                        .IsRequired();

                    b.Navigation("FuncionarioIdFuncionarioNavigation");

                    b.Navigation("PersonaIdPersonaNavigation");
                });

            modelBuilder.Entity("Data.Models.Archivo", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("Data.Models.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("Data.Models.Funcionario", b =>
                {
                    b.Navigation("Peticionarios");
                });

            modelBuilder.Entity("Data.Models.Oficina", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("Data.Models.Particulare", b =>
                {
                    b.Navigation("Archivos");
                });

            modelBuilder.Entity("Data.Models.Persona", b =>
                {
                    b.Navigation("Famiiliars");

                    b.Navigation("Funcionarios");

                    b.Navigation("Peticionarios");
                });

            modelBuilder.Entity("Data.Models.Peticionario", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("Famiiliars");
                });

            modelBuilder.Entity("Data.Models.Reporte", b =>
                {
                    b.Navigation("Cita");
                });
#pragma warning restore 612, 618
        }
    }
}
